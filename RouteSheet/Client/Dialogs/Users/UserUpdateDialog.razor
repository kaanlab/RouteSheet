@inject HttpClient httpClient
@inject UserValidator validator

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Color="Color.Info">
            <MudIcon Icon="@Icons.Material.Filled.Face" Title="@MudDialog.Title" />
            @MudDialog.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Context" @ref="@form">
            <MudTextField Label="Ф.И.О." @bind-Value="Context.Name" Validation="@(validator.ValidateValue)" For="@(() => Context.Name)" />
            <MudTextField Label="Должность" @bind-Value="Context.Position" Validation="@(validator.ValidateValue)" For="@(() => Context.Name)" />
            <MudTextField Label="Логин" @bind-Value="Context.UserName" Validation="@(validator.ValidateValue)" For="@(() => Context.UserName)" />
            <MudTextField Label="Почта" @bind-Value="Context.Email" Validation="@(validator.ValidateValue)" For="@(() => Context.Email)" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>

        <MudButton Variant="Variant.Outlined" Color="Color.Success" OnClick="Add">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public UserViewModel Context { get; set; }

    MudForm form;

    private async Task Add()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(Context));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
