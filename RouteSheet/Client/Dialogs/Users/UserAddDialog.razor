@inject HttpClient httpClient
@inject UserAddValidator validator

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Color="Color.Info">
            <MudIcon Icon="@Icons.Material.Filled.Face" Title="@MudDialog.Title" />
            @MudDialog.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Context" @ref="@form">
            <MudTextField Label="Должность" @bind-Value="Context.Name" Validation="@(validator.ValidateValue)" For="@(() => Context.Name)" />
            <MudTextField Label="Логин" @bind-Value="Context.UserName" Validation="@(validator.ValidateValue)" For="@(() => Context.UserName)" />
            <MudTextField Label="Почта" @bind-Value="Context.Email" Validation="@(validator.ValidateValue)" For="@(() => Context.Email)" />            
            <br />
            <div>
                <MudSelect Label="Выберите роль" @bind-Value="Context.Role" Validation="@(validator.ValidateValue)" For="@(() => Context.Role)">
                    @if (roles is null)
                    {
                        <MudProgressCircular Color="Color.Primary" Size="Size.Small" Indeterminate="true" />
                    }
                    else
                    {
                        @foreach (var role in roles)
                        {
                            <MudSelectItem Value="@role">@role</MudSelectItem>
                        }
                    }
                </MudSelect>
                <br />
            </div>
            <MudTextField Label="Пароль" Class="mt-3" InputType="InputType.Password"
                          @bind-Value="Context.Password" Validation="@(validator.ValidateValue)" For="@(() => Context.Password)" />
            <MudTextField Label="Повторить пароль" Class="mt-3" InputType="InputType.Password"
                          @bind-Value="Context.ConfirmPassword" Validation="@(validator.ValidateValue)" For="@(() => Context.ConfirmPassword)" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>

        <MudButton Variant="Variant.Outlined" Color="Color.Success" OnClick="Add">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public UserAddViewModel Context { get; set; } = new UserAddViewModel();

    string[] roles;

    MudForm form;

    protected override async Task OnInitializedAsync()
    {
        roles = await httpClient.GetFromJsonAsync<string[]>("api/users/allroles");
    }

    private async Task Add()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(Context));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}