<div class="d-flex justify-center mt-6">

    
    <table class="route-sheet">
        <tr>
            <td colspan="6" class="date">на период с @monday.ToString("dd.MM") по @sunday.ToString("dd.MM") @monday.ToString("yyyy")г.</td>
        </tr>
        <tr>
            <td rowspan="2">День недели</td>
            <td colspan="4">СП, ДО, ВНУ, индивидуальные занятия</td>
            <td rowspan="2">Медицинский пункт</td>
        </tr>
        <tr>
            <td>1 час</td>
            <td>2 час</td>
            <td>3 час</td>
            <td>4 час</td>
        </tr>


        @for (int date = 0; date < 6; date++)
        {
            <tr>
                <td>@daysOfWeek[date]</td>

                @for (int hour = 1; hour <= 5; hour++)
                {
                    <LessonTd CurrentDate="date" CurrentHour="hour" FirsDayOfWeek="monday" />
                }
            </tr>
        }
        <tr>
            <td>Примечание</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </table>
</div>

<div class="d-flex justify-center mt-6">
    <MudButton Variant="Variant.Outlined" OnClick="prevWeek" Class="pa-2 mx-2">&larr;</MudButton>
    <MudButton Variant="Variant.Outlined" OnClick="nextWeek" Class="pa-2 mx-2">&rarr;</MudButton>
</div>

<div class="d-flex justify-center mt-6">
    <AuthorizeView Roles="@($"{GlobalVarables.Roles.ADMIN}, {GlobalVarables.Roles.TEACHER}")">
        <MudButton Variant="Variant.Outlined" Color="Color.Success" OnClick="OnLessonAdd" Class="pa-2 mx-2">Добавить занятие</MudButton>
    </AuthorizeView>
    <AuthorizeView Roles="@($"{GlobalVarables.Roles.ADMIN}, {GlobalVarables.Roles.MEDIC}")">
        <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="OnMedLessonAdd" Class="pa-2 mx-2">Добавить запись</MudButton>
    </AuthorizeView>

</div>

@code {

    DateTime currentDate = DateTime.Now;
    DateTime monday;
    DateTime sunday;
    static string[] daysOfWeek = new[] { "Пн", "Вт", "Ср", "Чт", "Пт", "Сб" };

    [CascadingParameter]
    RouteSheetTable RouteSheetTable { get; set; }


    private async Task OnLessonAdd()
    {
        await RouteSheetTable.AddLesson();
    }

    private async Task OnMedLessonAdd()
    {
        await RouteSheetTable.AddMedLesson();
    }

    protected override void OnInitialized()
    {
        monday = currentDate.StartOfWeek(DayOfWeek.Monday);
        sunday = monday.AddDays(6);
    }


    void prevWeek()
    {
        monday = monday.AddDays(-7);
        sunday = sunday.AddDays(-7);
    }

    void nextWeek()
    {
        monday = monday.AddDays(7);
        sunday = sunday.AddDays(7);
    }

}
